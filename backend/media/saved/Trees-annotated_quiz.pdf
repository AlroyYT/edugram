%PDF-1.3
%ºß¬à
3 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 4 0 R
>>
endobj
4 0 obj
<<
/Length 1865
>>
stream
0.5670000000000001 w
0 G
BT
/F1 16 Tf
18.3999999999999986 TL
0 g
56.6929133858267775 785.1970866141732586 Td
(Quiz Results) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
56.6929133858267775 745.5120472440944468 Td
(File: Trees-annotated) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
56.6929133858267775 725.6695275590550409 Td
(Date: 28-07-2025) Tj
ET
BT
/F1 14 Tf
16.0999999999999979 TL
0 g
56.6929133858267775 685.9844881889763428 Td
(Score: 2/10) Tj
ET
BT
/F1 12 Tf
13.7999999999999989 TL
0 g
56.6929133858267775 646.2994488188976447 Td
(Question 1: What is another term for a node in a tree?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0 g
85.0393700787401627 606.614409448818833 Td
(A. Root) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 586.7718897637794271 Td
(B. Edge) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 566.9293700787401349 Td
(C. Vertex) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 547.086850393700729 Td
(D. Leaf) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 507.4018110236219741 Td
(Explanation: A node in a tree can also be referred to as a vertex.) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 428.0317322834645211 Td
(Question 2: What is a tree called if every node other than the leaves has two children?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 388.3466929133857661 Td
(A. Complete Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 368.5041732283464171 Td
(B. Full Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 348.6616535433070112 Td
(C. Strictly Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 328.8191338582676053 Td
(D. Skewed Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 289.1340944881889072 Td
(Explanation: A strictly binary tree is one where every node other than the leaves has exactly two children.) Tj
ET
endstream
endobj
5 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 6 0 R
>>
endobj
6 0 obj
<<
/Length 2138
>>
stream
0.5670000000000001 w
0 G
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(Question 3: What is a collection of trees referred to as?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 745.5120472440944468 Td
(A. Branch) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 725.6695275590550409 Td
(B. Root) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 705.8270078740157487 Td
(C. Subtree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 685.9844881889763428 Td
(D. Forest) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 646.2994488188976447 Td
(Explanation: A forest is a collection or set of trees.) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 566.9293700787401349 Td
(Question 4: Which tree traversal method visits the root node last?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 527.2443307086614368 Td
(A. Inorder Traversal) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 507.4018110236219741 Td
(B. Preorder Traversal) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 487.559291338582625 Td
(C. Postorder Traversal) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 467.716771653543276 Td
(D. Breadth First Search) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 428.0317322834645211 Td
(Explanation: In postorder traversal, the root node is visited after its left and right subtrees.) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 348.6616535433070112 Td
(Question 5: In the context of trees, what does 'parent' refer to?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 308.9766141732283131 Td
(A. A node with no children) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 289.1340944881889072 Td
(B. A node with two children) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 269.2915748031495013 Td
(C. The root of the tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 249.4490551181102092 Td
(D. The immediate predecessor of a node) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 209.7640157480313974 Td
(Explanation: The parent node is the node directly above another node in the tree hierarchy.) Tj
ET
endstream
endobj
7 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 8 0 R
>>
endobj
8 0 obj
<<
/Length 2353
>>
stream
0.5670000000000001 w
0 G
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(Question 6: What is the term for nodes that share the same parent?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 745.5120472440944468 Td
(A. Children) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 725.6695275590550409 Td
(B. Ancestors) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 705.8270078740157487 Td
(C. Siblings) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 685.9844881889763428 Td
(D. Descendants) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 646.2994488188976447 Td
(Explanation: Nodes that share the same parent are called siblings.) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 566.9293700787401349 Td
(Question 7: What is the name for a binary tree where all levels are completely filled except possibly the last) Tj
T* (level, which is filled from left to right?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 507.4018110236219741 Td
(A. Full Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 487.559291338582625 Td
(B. Skewed Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 467.716771653543276 Td
(C. Complete Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 447.8742519685038701 Td
(D. Balanced Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 408.1892125984251152 Td
(Explanation: A complete binary tree has all levels filled except possibly the last, which is filled from left to) Tj
T* (right.) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 308.9766141732283131 Td
(Question 8: What is the name of a binary tree where all internal nodes have two children and all leaf nodes) Tj
T* (are at the same level?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 249.4490551181102092 Td
(A. Skewed Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 229.6065354330708033 Td
(B. Complete Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 209.7640157480313974 Td
(C. Full Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 189.9214960629919915 Td
(D. Extended Binary Tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 150.2364566929132934 Td
(Explanation: A full binary tree is a tree in which every node other than the leaves has two children.) Tj
ET
endstream
endobj
9 0 obj
<</Type /Page
/Parent 1 0 R
/Resources 2 0 R
/MediaBox [0 0 595.2799999999999727 841.8899999999999864]
/Contents 10 0 R
>>
endobj
10 0 obj
<<
/Length 1644
>>
stream
0.5670000000000001 w
0 G
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 785.1970866141732586 Td
(Question 9: What is the purpose of a Binary Search Tree?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 745.5120472440944468 Td
(A. To store data in a linear fashion) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 725.6695275590550409 Td
(B. To efficiently search, insert, and delete nodes) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 705.8270078740157487 Td
(C. To represent mathematical expressions) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 685.9844881889763428 Td
(D. To create a heap data structure) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 646.2994488188976447 Td
(Explanation: Binary Search Trees are designed for efficient searching, insertion, and deletion operations.) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 566.9293700787401349 Td
(Question 10: What is the definition of the 'height' of a tree?) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 527.2443307086614368 Td
(A. The number of nodes in the tree) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. 0.502 0. rg
85.0393700787401627 507.4018110236219741 Td
(B. The number of edges in the longest path from the root to a leaf) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
85.0393700787401627 487.559291338582625 Td
(C. The number of internal nodes) Tj
ET
BT
/F1 10 Tf
11.5 TL
1. 0. 0. rg
85.0393700787401627 467.716771653543276 Td
(D. The number of leaf nodes) Tj
ET
BT
/F1 10 Tf
11.5 TL
0. g
56.6929133858267775 428.0317322834645211 Td
(Explanation: The height \(or depth\) of a tree is the length of the longest path from the root to a leaf.) Tj
ET
endstream
endobj
1 0 obj
<</Type /Pages
/Kids [3 0 R 5 0 R 7 0 R 9 0 R ]
/Count 4
>>
endobj
11 0 obj
<<
/Type /Font
/BaseFont /Helvetica
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
12 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
13 0 obj
<<
/Type /Font
/BaseFont /Helvetica-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
14 0 obj
<<
/Type /Font
/BaseFont /Helvetica-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
15 0 obj
<<
/Type /Font
/BaseFont /Courier
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
16 0 obj
<<
/Type /Font
/BaseFont /Courier-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
17 0 obj
<<
/Type /Font
/BaseFont /Courier-Oblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
18 0 obj
<<
/Type /Font
/BaseFont /Courier-BoldOblique
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
19 0 obj
<<
/Type /Font
/BaseFont /Times-Roman
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
20 0 obj
<<
/Type /Font
/BaseFont /Times-Bold
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
21 0 obj
<<
/Type /Font
/BaseFont /Times-Italic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
22 0 obj
<<
/Type /Font
/BaseFont /Times-BoldItalic
/Subtype /Type1
/Encoding /WinAnsiEncoding
/FirstChar 32
/LastChar 255
>>
endobj
23 0 obj
<<
/Type /Font
/BaseFont /ZapfDingbats
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
24 0 obj
<<
/Type /Font
/BaseFont /Symbol
/Subtype /Type1
/FirstChar 32
/LastChar 255
>>
endobj
2 0 obj
<<
/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]
/Font <<
/F1 11 0 R
/F2 12 0 R
/F3 13 0 R
/F4 14 0 R
/F5 15 0 R
/F6 16 0 R
/F7 17 0 R
/F8 18 0 R
/F9 19 0 R
/F10 20 0 R
/F11 21 0 R
/F12 22 0 R
/F13 23 0 R
/F14 24 0 R
>>
/XObject <<
>>
>>
endobj
25 0 obj
<<
/Producer (jsPDF 3.0.1)
/CreationDate (D:20250728162038+05'30')
>>
endobj
26 0 obj
<<
/Type /Catalog
/Pages 1 0 R
/OpenAction [3 0 R /FitH null]
/PageLayout /OneColumn
>>
endobj
xref
0 27
0000000000 65535 f 
0000008773 00000 n 
0000010613 00000 n 
0000000015 00000 n 
0000000152 00000 n 
0000002069 00000 n 
0000002206 00000 n 
0000004396 00000 n 
0000004533 00000 n 
0000006938 00000 n 
0000007076 00000 n 
0000008848 00000 n 
0000008974 00000 n 
0000009105 00000 n 
0000009239 00000 n 
0000009377 00000 n 
0000009501 00000 n 
0000009630 00000 n 
0000009762 00000 n 
0000009898 00000 n 
0000010026 00000 n 
0000010153 00000 n 
0000010282 00000 n 
0000010415 00000 n 
0000010517 00000 n 
0000010866 00000 n 
0000010952 00000 n 
trailer
<<
/Size 27
/Root 26 0 R
/Info 25 0 R
/ID [ <B0A54883EDB79B63A8DB8C25C18CB03E> <B0A54883EDB79B63A8DB8C25C18CB03E> ]
>>
startxref
11056
%%EOF